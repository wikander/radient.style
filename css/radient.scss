@use "sass:math";
@use "./paint.scss";
@use "./vars.scss";
@use "./utils.scss";
@use "./radient-dynamic.scss";

:root {
  --pieceAngle: 100deg;
}

@mixin apps($c: currentColor, $backgroundColor: #fff) {
  background-size: 33.33% 33.33%;
  background-repeat: repeat;
  background-image: radial-gradient(
    35% 35%,
    $c calc(100% - 1px),
    $backgroundColor 100%
  );
}

@mixin face($c: currentColor, $bgc: #fff) {
  @include radient-dynamic.face(4%, $c, $bgc);
}

@mixin pie($c: currentColor, $bgc: #fff) {
  @include radient-dynamic.pie(0deg, var(--pieceAngle), 50%, 0%, $c, $bgc);
}

@mixin pie-periphery($c: currentColor, $bgc: #fff) {
  @include radient-dynamic.pie(0deg, var(--pieceAngle), 50%, 84%, $c, $bgc);
}

@mixin contactless($c: currentColor, $bgc: #fff) {
  $centerRadius: 35%;
  $lineWidth: 9%;
  $angle: 55.5deg;

  background-image: conic-gradient(
      from 90deg + math.div($angle, 2),
      $bgc (1turn - $angle),
      transparent (1turn - $angle)
    ),
    radial-gradient(
      50% 50%,
      $bgc $centerRadius,
      $c $centerRadius ($centerRadius + $lineWidth),
      $bgc ($centerRadius + $lineWidth)
        ($centerRadius + $lineWidth * 2),
      $c ($centerRadius + $lineWidth * 2)
        ($centerRadius + $lineWidth * 3),
      $bgc ($centerRadius + $lineWidth * 3)
        ($centerRadius + $lineWidth * 4),
      $c ($centerRadius + $lineWidth * 4)
        ($centerRadius + $lineWidth * 5),
      $bgc ($centerRadius + $lineWidth * 5)
        ($centerRadius + $lineWidth * 6),
      $c ($centerRadius + $lineWidth * 6)
        ($centerRadius + $lineWidth * 7),
      $bgc ($centerRadius + $lineWidth * 7)
    );
}

@mixin wifi($c: currentColor, $bgc: #fff) {
  $centerRadius: 15%;
  $lineWidth: 12%;

  background-image: conic-gradient(
      from 45deg at bottom,
      $bgc 270deg,
      transparent 270deg
    ),
    radial-gradient(
      50% 50% at bottom,
      $c $centerRadius,
      $bgc $centerRadius ($centerRadius + $lineWidth),
      $c ($centerRadius + $lineWidth)
        ($centerRadius + ($lineWidth * 2)),
      $bgc ($centerRadius + ($lineWidth * 2))
        ($centerRadius + ($lineWidth * 3)),
      $c ($centerRadius + ($lineWidth * 3))
        ($centerRadius + ($lineWidth * 4)),
      $bgc ($centerRadius + ($lineWidth * 4))
        ($centerRadius + ($lineWidth * 5)),
      $c ($centerRadius + ($lineWidth * 5))
        ($centerRadius + ($lineWidth * 6)),
      $bgc ($centerRadius + ($lineWidth * 6))
        ($centerRadius + ($lineWidth * 7))
    );
}

@mixin menu($c: currentColor, $bgc: #fff) {
  $horizontalPadding: 12.5%;
  background-image: #{paint.barFilled(
        vars.$transparent,
        $bgc,
        90deg,
        75%
      )},
    linear-gradient(
      0deg,
      $bgc 25%,
      $c 25% (25% + math.percentage(vars.$lineWidthRelative)),
      $bgc (25% + math.percentage(vars.$lineWidthRelative))
        (25% + math.percentage(vars.$lineWidthRelative) + 12.5%),
      $c (25% + math.percentage(vars.$lineWidthRelative) + 12.5%)
        (
          25% + math.percentage(vars.$lineWidthRelative) + 12.5% +
            math.percentage(vars.$lineWidthRelative)
        ),
      $bgc
        (
          25% + math.percentage(vars.$lineWidthRelative) + 12.5% +
            math.percentage(vars.$lineWidthRelative)
        )
        (
          25% + math.percentage(vars.$lineWidthRelative) + 12.5% +
            math.percentage(vars.$lineWidthRelative) + 12.5%
        ),
      $c
        (
          25% + math.percentage(vars.$lineWidthRelative) + 12.5% +
            math.percentage(vars.$lineWidthRelative) + 12.5%
        )
        (
          25% + math.percentage(vars.$lineWidthRelative) + 12.5% +
            math.percentage(vars.$lineWidthRelative) + 12.5% +
            math.percentage(vars.$lineWidthRelative)
        ),
      $bgc
        (
          25% + math.percentage(vars.$lineWidthRelative) + 12.5% +
            math.percentage(vars.$lineWidthRelative) + 12.5% +
            math.percentage(vars.$lineWidthRelative)
        )
    );
}

@mixin gs1($c: currentColor, $bgc: #fff) {
  background-image: conic-gradient(
      from -25deg at 60% 50%,
      $bgc 230deg,
      vars.$transparent 230deg
    ),
    radial-gradient(
      50% 50%,
      vars.$transparent utils.openDown(37%),
      $c 37% 43%,
      vars.$transparent utils.openUp(43%) utils.openDown(54%),
      $c 54% 61%,
      vars.$transparent utils.openUp(61%) utils.openDown(72%),
      $c 72% 80%,
      vars.$transparent utils.openUp(80%) utils.openDown(91%),
      $c 91% 100%,
      vars.$transparent utils.openUp(100%)
    );
}

@mixin done($c: currentColor, $bgc: #fff) {
  background-image: conic-gradient(
      from 135deg at 64% 5.4%,
      vars.$transparent 90deg,
      $bgc 90deg 315deg
    ),
    conic-gradient(
      from 315deg at 37.5% 67.5%,
      $bgc 90deg,
      vars.$transparent 90deg 315deg
    ),
    conic-gradient(
      from 315deg at 37.5% 79%,
      $c 90deg,
      vars.$transparent 90deg 315deg
    );
}

@mixin chevron-up($c: currentColor, $bgc: #fff) {
  background-image: conic-gradient(
      from 315deg at 50% math.percentage(math.div(5, 6)),
      vars.$transparent 90deg,
      $bgc 90deg 315deg
    ),
    conic-gradient(
      from 135deg at 50% 45.125%,
      $bgc 90deg,
      vars.$transparent 90deg 315deg
    ),
    conic-gradient(
      from 135deg at 50% math.percentage(math.div(1, 3)),
      $c 90deg,
      vars.$transparent 90deg 315deg
    );
}

@mixin chevron-down($c: currentColor, $bgc: #fff) {
  background-image: conic-gradient(
      from 135deg at 50% (100% - math.percentage(math.div(5, 6))),
      vars.$transparent 90deg,
      $bgc 90deg 315deg
    ),
    conic-gradient(
      from 315deg at 50% (100% - 45.125%),
      $bgc 90deg,
      vars.$transparent 90deg 315deg
    ),
    conic-gradient(
      from 315deg at 50% (100% - math.percentage(math.div(1, 3))),
      $c 90deg,
      vars.$transparent 90deg 315deg
    );
}

@mixin chevron-right($c: currentColor, $bgc: #fff) {
  background-image: conic-gradient(
      from 45deg at (100% - math.percentage(math.div(5, 6))) 50%,
      vars.$transparent 90deg,
      $bgc 90deg 315deg
    ),
    conic-gradient(
      from 225deg at (100% - 45.125%) 50%,
      $bgc 90deg,
      vars.$transparent 90deg 315deg
    ),
    conic-gradient(
      from 225deg at (100% - math.percentage(math.div(1, 3))) 50%,
      $c 90deg,
      vars.$transparent 90deg 315deg
    );
}

@mixin chevron-left($c: currentColor, $bgc: #fff) {
  background-image: conic-gradient(
      from 225deg at math.percentage(math.div(5, 6)) 50%,
      vars.$transparent 90deg,
      $bgc 90deg 315deg
    ),
    conic-gradient(
      from 45deg at 45.125% 50%,
      $bgc 90deg,
      vars.$transparent 90deg 315deg
    ),
    conic-gradient(
      from 45deg at math.percentage(math.div(1, 3)) 50%,
      $c 90deg,
      vars.$transparent 90deg 315deg
    );
}

@mixin ball($c: currentColor, $bgc: #fff) {
  background-image: #{paint.circleOutline(
        $bgc,
        vars.$transparent,
        vars.$transparent,
        100%,
        50%,
        35%
      )},
    #{paint.circleFilled($c, $bgc, 50%, 50%, math.percentage(math.div(5, 12)))};
}

@mixin barcode($c: currentColor, $bgc: #fff) {
  @include radient-dynamic.barcode(5 4 7 8 6 2 9 9 2 6 5 10 4 2 3 6 7, $c, $bgc);
}


